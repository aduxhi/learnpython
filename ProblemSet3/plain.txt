def hangman(secretWord):
		'''
		secretWord: string, the secret word to guess.

		Starts up an interactive game of Hangman.

		* At the start of the game, let the user know how many 
			letters the secretWord contains.

		* Ask the user to supply one guess (i.e. letter) per round.

		* The user should receive feedback immediately after each guess 
			about whether their guess appears in the computers word.

		* After each round, you should also display to the user the 
			partially guessed word so far, as well as letters that the 
			user has not yet guessed.

		Follows the other limitations detailed in the problem write-up.
		'''
		# FILL IN YOUR CODE HERE...

		print('Welcome to the game, Hangman!')
		print('I am thinking of a word that is '+str(len(secretWord)) +' letters long.')
		print ('-------------')
		lettersGuessed = []
		i = 8 
		while i > 0:

				print('You have '+ str(i) + ' guesses left.')
				print 'Available Letters:', getAvailableLetters(lettersGuessed)
				
				#接受输入的的字符
				lettersInput = raw_input('Please guess a letter: ')
				
				guss = lettersInput.lower()   #将输入的字符小写化
				
				#首先检测是否输入过 如果输入过，提示，不加数，没有的话，
				if guss in lettersGuessed:
						print 'Oops! You\'ve already guessed that letter:', getGuessedWord(secretWord, lettersGuessed)
						continue
				else:
						lettersGuessed.append(guss)
				
				#没有输入这个字母
				
				if guss in secretWord:
						print 'Good guess:', getGuessedWord(secretWord, lettersGuessed)
						print ('-------------')
						
				else:
						i -=1
						print 'Oops! That letter is not in my word:', getGuessedWord(secretWord, lettersGuessed)
						print ('-------------')
				
				#判断是否达到边界
				# 如果完全猜出
				if  isWordGuessed(secretWord, lettersGuessed):          
						print ('Congratulations, you won!')
						break 
				if i == 0:
						print('Sorry, you ran out of guesses. The word was else.')
					
